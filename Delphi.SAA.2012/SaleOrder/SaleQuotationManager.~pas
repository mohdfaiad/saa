unit SaleQuotationManager;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, AbstractcxDataBrowse, cxStyles, cxCustomData, cxGraphics,
  cxFilter, cxData, cxDataStorage, cxEdit, DB, cxDBData, dxBar, Menus,
  cxGridLevel, cxClasses, cxControls, cxGridCustomView,
  cxGridCustomTableView, cxGridTableView, cxGridDBTableView, cxGrid,
  StdCtrls, Buttons, ExtCtrls, Grids, Wwdbigrd, Wwdbgrid, fcStatusBar,
  DialogUtils;

type
  TfrmCXSaleQuotaionManager = class(TcxAbstractDataBrowse)
    cxGridDBTableViewDOC_NO: TcxGridDBColumn;
    cxGridDBTableViewDOC_DATE: TcxGridDBColumn;
    cxGridDBTableViewREF_NO: TcxGridDBColumn;
    cxGridDBTableViewDESCS: TcxGridDBColumn;
    cxGridDBTableViewFAX_TO: TcxGridDBColumn;
    cxGridDBTableViewCC_TO: TcxGridDBColumn;
    cxGridDBTableViewNAME: TcxGridDBColumn;
    cxGridDBTableViewTERM_OF_PAYMENT: TcxGridDBColumn;
    cxGridLevel1: TcxGridLevel;
    cxGridDBTableView1: TcxGridDBTableView;
    cxGridDBTableView1ITEM_CODE: TcxGridDBColumn;
    cxGridDBTableView1ITEM_DESCS: TcxGridDBColumn;
    cxGridDBTableView1QTY: TcxGridDBColumn;
    cxGridDBTableView1UNIT_COST: TcxGridDBColumn;
    dsQuoteItem: TDataSource;
    procedure cxGridDBTableViewSelectionChanged(
      Sender: TcxCustomGridTableView);
    procedure cxGridDBTableViewDblClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
   // procedure setupdataset;override;
    procedure doPostAction(Sender: TObject);override;
    procedure doNewAction(Sender: TObject);override;
    procedure doEditAction(Sender: TObject);override;
    procedure doDeleteAction(sender:TObject);override;
    procedure doExitAction(Sender: TObject);override;
    procedure doRefreshAction(Sender: TObject);override;
    procedure setupDataSets;override;
    procedure InitComponents;
  end;

var
  frmCXSaleQuotaionManager: TfrmCXSaleQuotaionManager;


implementation
uses SaleOrderDataModule,SaleQuotation, AbstractDataBrowse;

{$R *.dfm}

procedure TfrmCXSaleQuotaionManager.InitComponents;
begin
  inherited;
  postAction.Caption :='Approve';
  postButton.Action:= postAction;
  postButton.Caption :=postAction.Caption;
end;

procedure TfrmCXSaleQuotaionManager.doPostAction(Sender: TObject);
Var docType:TSaleOrderDocumentType;
begin
  if (dsQuoteItem.dataset.RecordCount >0) then
  begin
  with datasource.DataSet do
  begin
      docType:=TYPE_QUOTATION;
      fsuccess :=SaleOrderDataManager.UpdateSaleDocumentStatus(
      FieldByName('cust_code').AsString,
      FieldByName('doc_no').AsString,
     FormatDateTime('mm/dd/yyyy',FieldByName('doc_date').AsDateTime) ,
      docType,
      'A');

      doRefreshAction(sender);
  end;
  end else
  begin
    warning('Could not approve quotation when detail record is empty');
  end;
end;
procedure TfrmCXSaleQuotaionManager.doNewAction(Sender: TObject);
begin
//
  try
    cursor :=sqlWait;
    frmCXSaleQuotation := TfrmCXSaleQuotation.create(self,fSelectedObject,'DOC_NO',0);
    frmCXSaleQuotation.FormStyle :=fsMdiChild;
    frmCXSaleQuotation.Top :=0;
    frmCXSaleQuotation.Left :=0;
    frmCXSaleQuotation.Show;
  finally
    cursor :=crDefault;
  end;

end;
procedure TfrmCXSaleQuotaionManager.doEditAction(Sender: TObject);
begin
  try
     cursor := crSQLWait;
    fSelectedObject := datasource.DataSet.FieldByName('doc_no').AsString;
    frmCXSaleQuotation := TfrmCXSaleQuotation.create(self,fSelectedObject,'DOC_NO',1);
    frmCXSaleQuotation.FormStyle :=fsMdiChild;
    frmCXSaleQuotation.Top :=0;
    frmCXSaleQuotation.Left :=0;
    frmCXSaleQuotation.Show;
  finally

     cursor :=crDefault;
  end;
//
end;
procedure TfrmCXSaleQuotaionManager.doDeleteAction(sender:TObject);
begin
 //
end;
procedure TfrmCXSaleQuotaionManager.doExitAction(Sender: TObject);
begin
  CLOSE;
end;
procedure TfrmCXSaleQuotaionManager.doRefreshAction(Sender: TObject);
begin
 datasource.dataset.close;
 datasource.dataset.Open;

end;

procedure TfrmCXSaleQuotaionManager.setupdatasets;
begin
  datasource.dataset :=SaleOrderDataManager.qryUnApproveQuote;
  dsQuoteItem.dataset :=SaleOrderDataManager.tbSaleQuoteDTView
end;

procedure TfrmCXSaleQuotaionManager.cxGridDBTableViewSelectionChanged(
  Sender: TcxCustomGridTableView);
begin
  inherited;
  fSelectedObject := datasource.DataSet.FieldByName(fPkColumnName).AsSTring;
end;

procedure TfrmCXSaleQuotaionManager.cxGridDBTableViewDblClick(
  Sender: TObject);
begin
  inherited;
  doRefreshAction(sender);
end;

end.
